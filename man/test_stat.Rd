% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_lasso_iv_ar.R
\name{test_stat}
\alias{test_stat}
\title{Test Statistic}
\usage{
test_stat(Y, D, Z, parameter, target)
}
\arguments{
\item{Y}{The outcome}

\item{D}{The treatment}

\item{Z}{The p instruments}

\item{parameter}{Parameter of interest}

\item{target}{Observed target test statistic}
}
\value{
The result matrix of the test.
}
\description{
Return the result by comparing parameter of interest and observed
target test statistic.
}
\examples{
# Fit the group lasso optimization model for AR statisitc
Z = matrix(rnorm(10*3), nrow = 10, ncol = 3) +
    matrix(replicate(3, matrix(0, nrow = 10, ncol = 1)),
    nrow = 10)
errorTerm = MASS::mvrnorm(n=10, mu=rep(0,2),
            Sigma=rbind(c(1, 0.8),c(0.8, 1)))
D = Z \%*\% rep(1, 3) + errorTerm[1:10, 2]
Y = D * 1 + errorTerm[1:10, 1]
gl_ar <- group_lasso_iv_ar(Y, D, Z)
model_ar <- fit_ar(gl_ar)

# Estimate covariance and obtain summary statistics
cov = estimate_covariance(Y, D, Z)
s <- summary_ar(gl_ar, model_ar$sampler,
                Sigma_11=cov[1,1], Sigma_12=cov[1,2])

# Construct the optimization intervals before computing confidence intervals
# for AR test statistic
opt_sampling_info = list(sets::tuple(model_ar$sampler,
                                     s$opt_sample,
                                     s$cov_target,
                                     s$cov_target_score))
intervals <- optimization_intervals(opt_sampling_info,
                                    s$observed_target,
                                    nrow(s$opt_sample))

# Construct the observed statistic using the test_stat method
observed_stat <- test_stat(gl_ar$Y,
                           gl_ar$D,
                           gl_ar$Z,
                           s$two_stage_ls[1,1],
                           intervals$observed - s$K2*0)
observed_stat

# Construct the sample statistic using the test_stat method
sample_stat <- test_stat(gl_ar$Y,
                         gl_ar$D,
                         gl_ar$Z,
                         s$two_stage_ls[1,1],
                         intervals$normal_sample)
sample_stat

# We can then compare the sample statistic and observed statistic,
# and using the weighted result to calculate the pivot quantity
weights <- c(0.09295276, 0.14619586, 0.29340068, 0.09858847, 0.22387328,
             0.36631718, 1.00000000, 0.48428178, 0.11871560, 0.25548842,
             0.07810723, 0.04390910, 0.16664036, 0.34837691, 0.08737997,
             0.09005764, 0.23332698, 0.14983265, 0.08651515, 0.12559373)
comp = apply(sample_stat, c(1,2), function(x) x <= observed_stat)
pivot = mean(comp * weights) / mean(weights)
}
\references{
Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2019). Inference After Selecting
Plausibly Valid Instruments with Application to Mendelian Randomization.

Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2020). Inferring Treatment
Effects After Testing Instrument Strength in Linear Models.
}
