% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intervals_ar.R
\name{confidence_interval_iv_ar}
\alias{confidence_interval_iv_ar}
\title{Confidence Interval with Instrumental Variables for AR Test Statistic}
\usage{
confidence_interval_iv_ar(
  intervals,
  linear_func,
  gl_ar,
  beta_reference,
  level = 0.95,
  how_many_sd = 20,
  how_many_steps = 10
)
}
\arguments{
\item{intervals}{Optimization intervals}

\item{linear_func}{Linear function}

\item{gl_ar}{The group lasso object for AR test statistic representing the
penalized convex optimization equation (generated by
group_lasso_iv function)}

\item{beta_reference}{Reference value for beta parameter}

\item{level}{Specify the confidence level (optional)}

\item{how_many_sd}{Specify the number of standard deviations (optional)}

\item{how_many_steps}{Specify the number of steps (optional)}
}
\value{
A sequence of pivot quantities
}
\description{
Construct a selective confidence interval for a specific parameter of the target.
}
\examples{
# Fit the group lasso optimization model
Z = matrix(rnorm(10*3), nrow = 10, ncol = 3) +
    matrix(replicate(3, matrix(0, nrow = 10, ncol = 1)),
    nrow = 10)
errorTerm = MASS::mvrnorm(n=10, mu=rep(0,2),
            Sigma=rbind(c(1, 0.8),c(0.8, 1)))
D = Z \%*\% rep(1, 3) + errorTerm[1:10, 2]
Y = D * 1 + errorTerm[1:10, 1]
gl_ar <- group_lasso_iv_ar(Y, D, Z)
model_ar <- fit_ar(gl_ar)

# Estimate covariance and obtain summary statistics
cov = estimate_covariance(Y, D, Z)
s <- summary_ar(gl_ar, model_ar$sampler,
                Sigma_11=cov[1,1], Sigma_12=cov[1,2])


# Construct the optimization intervals before computing confidence intervals
# for AR test statistic
opt_sampling_info = list(sets::tuple(model_ar$sampler,
                                     s$opt_sample,
                                     s$cov_target,
                                     s$cov_target_score))
intervals <- optimization_intervals(opt_sampling_info,
                                    s$observed_target,
                                    nrow(s$opt_sample))

# Construct the confidence interval a specific observed AR test statistic
confidence_interval_iv_ar(intervals=intervals,
                          linear_func=s$K2,
                          gl_ar=gl_ar,
                          beta_reference=s$two_stage_ls[1,1],
                          level=0.95,
                          how_many_sd=4000,
                          how_many_steps=100)
}
\references{
Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2019). Inference After Selecting
Plausibly Valid Instruments with Application to Mendelian Randomization.

Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2020). Inferring Treatment
Effects After Testing Instrument Strength in Linear Models.
}
\seealso{
\link{optimization_intervals} to initialize an interval for the optimization
problem, which specify the observed target and its covariance as well as
optimization samples and sampler. We need to initialize an optimization_intervals
before computing confidence intervals.

\link{confidence_intervals_iv_ar} for constructing selective confidence
intervals for AR test statistic.

\link{confidence_intervals_iv} for constructing selective confidence
intervals for TSLS test statistic.

\link{confidence_interval_iv} for constructing a selective
confidence interval for a specific parameter of the target for TSLS
test statistic.

\link{test_stat} that returns the result of comparing parameter of
interest and observed target test statistic.

\link{pivot_iv_ar} for calculating the pivot quantities of the optimization
intervals before computing p-values for AR test statistic.
}
