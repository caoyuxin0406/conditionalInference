% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_lasso_iv.R
\name{fit_tsls}
\alias{fit_tsls}
\title{Fit Group Lasso Model with IV for TSLS Test Statistic}
\usage{
fit_tsls(gl, perturb = NULL)
}
\arguments{
\item{gl}{The group lasso object representing the penalized convex
optimization equation (generated by group_lasso_iv function).}

\item{perturb}{Initial value of the randomization term (i.e. omega).}
}
\value{
A fitted two-stage least-squares object, which is a list:
\item{initial_omega}{Initial randomization noise.}
\item{initial_soln}{Initial solution from the optimization problem (i.e. vector v).}
\item{observed_opt_state}{Initial solution for opt variables (i.e. 2-norm of vector v).}
\item{observed_score_state}{The negated S matrix. Recall that the S matrix
is the `data_part` attribute returned by the group_lasso_iv method.}
\item{initial_subgrad}{Initial state for optimization variables.}
\item{lagrange}{Lambda term; the weights of penalty.}
\item{active_directions}{Active directions of vector v (same value as opt_linear).}
\item{opt_linear}{Linear part of the optimization problem. It approximately
equals to vector u.}
\item{opt_offset}{Offset part of the optimization problem. It approximately
equals to the vecotr -(du - S - w)}
\item{covariance}{Covariance of randomizer.}
\item{precision}{Precision of randomizer.}
\item{cond_precision}{Conditional precision.}
\item{cond_cov}{Conditional covariance.}
\item{logdens_linear}{Linear part of log density.}
\item{cond_mean}{Conditional mean.}
\item{log_density}{A function to calculate log density.}
\item{affine_con}{The box constraint for affine Gaussian distribution.}
\item{sampler}{The optimization sampler.}
}
\description{
Establish and obtain results from the penalized convex optimization problem
for Two Stage Least Squares test statistic.
}
\details{
Use optimization conditions and change-of-variables to derive tractable
conditional probability of TSLS test statistic. The conditional null
density of TSLS test statistic is computed based on

\eqn{\ell_{\beta_0}(S,\omega | d>0, u) = f_{\beta_0}(S) * g(du - S + \lambda u) *
\mathbb{I}(d>0) * |\mathcal{J}|, \hspace{0.5cm} |\mathcal{J}| = (d+\lambda)^{(p-1)}}

where \eqn{f_{\beta_0}(S)} is the original null density of \eqn{S} matrix under \eqn{H_0}.
\eqn{g(du-S+\lambda u)=g(\omega)} is the distribution of the random noise,
which is assumed to be Normal. \eqn{\mathbb{I}(d>0)} is asymptotically equivalent
to the conditioning event \{\eqn{F \geq C_0}\}. \eqn{\mathcal{J}} is the Jacobian term
from the change-of-variable formula.
}
\examples{
# Fitting the model without specifying perturb (i.e. initial_omega)
Z = matrix(rnorm(10*3), nrow = 10, ncol = 3) +
    matrix(replicate(3, matrix(0, nrow = 10, ncol = 1)),
    nrow = 10)
errorTerm = MASS::mvrnorm(n=10, mu=rep(0,2),
            Sigma=rbind(c(1, 0.8),c(0.8, 1)))
D = Z \%*\% rep(1, 3) + errorTerm[1:10, 2]
Y = D * 1 + errorTerm[1:10, 1]
gl <- group_lasso_iv(Y, D, Z)
fit_tsls(gl)

# Fitting the model specifying perturb (i.e. initial_omega)
initial_omega = t(matrix(c(1.51039801, 0.34261832, 0.83800456)))
fit_tsls(gl, perturb = initial_omega)
}
\references{
Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2019). Inference After Selecting
Plausibly Valid Instruments with Application to Mendelian Randomization.

Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2020). Inferring Treatment
Effects After Testing Instrument Strength in Linear Models.
}
\seealso{
\link{fit_ar} that fits a similar model. It fits the group lasso model
with instrumental variables for an AR test statistic.

\link[MASS]{mvrnorm} for sampling from multivariate normal distribution.

\link[CVXR]{Variable}, \link[CVXR]{Minimize}, \link[CVXR]{Problem},
\link[CVXR]{sum_squares}, \link[CVXR]{norm}, \link[CVXR]{solve} for
constructing and solving an optimization problem.

\link{constraints} for creating the box constraint.

\link{affine_gaussian_sampler} for creating a sampler to generate samples
from an affine truncated Gaussian distribution.
}
