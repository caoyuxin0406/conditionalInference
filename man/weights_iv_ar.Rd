% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intervals_ar.R
\name{weights_iv_ar}
\alias{weights_iv_ar}
\title{Weights with Instrument Variables for AR Test Statistic}
\usage{
weights_iv_ar(
  opt_intervals,
  sample_target,
  candidate,
  nuisance,
  translate_dirs,
  translate_dirs_candidate
)
}
\arguments{
\item{opt_intervals}{Optimization intervals}

\item{sample_target}{Normal sample under zero}

\item{candidate}{The difference beta-beta_reference}

\item{nuisance}{Nuisance sufficient stats for each view}

\item{translate_dirs}{Points will be moved like sample * score_cov}

\item{translate_dirs_candidate}{Candidate for points movement direction}
}
\value{
Weights of the sequence of pivot values
}
\description{
Calculate the weights of candidate pivot values for AR test statistic.
}
\examples{
# Fit the group lasso optimization model for AR statisitc
Z = matrix(rnorm(10*3), nrow = 10, ncol = 3) +
    matrix(replicate(3, matrix(0, nrow = 10, ncol = 1)),
    nrow = 10)
errorTerm = MASS::mvrnorm(n=10, mu=rep(0,2),
            Sigma=rbind(c(1, 0.8),c(0.8, 1)))
D = Z \%*\% rep(1, 3) + errorTerm[1:10, 2]
Y = D * 1 + errorTerm[1:10, 1]
gl_ar <- group_lasso_iv_ar(Y, D, Z)
model_ar <- fit_ar(gl_ar)

# Estimate covariance and obtain summary statistics
cov = estimate_covariance(Y, D, Z)
s <- summary_ar(gl_ar, model_ar$sampler, Sigma_11=cov[1,1],
                Sigma_12=cov[1,2], ndraw=20, burnin=20)

# Construct the optimization intervals before computing confidence
#  intervals for AR test statistic
opt_sampling_info = list(sets::tuple(model_ar$sampler,
                                     s$opt_sample,
                                     s$cov_target,
                                     s$cov_target_score))
intervals <- optimization_intervals(opt_sampling_info,
                                    s$observed_target,
                                    nrow(s$opt_sample))

# Setting up parameters for weights_iv_ar method
observed_target = intervals$observed
sample_target = intervals$normal_sample
target_cov = intervals$target_cov
cur_nuisance = matrix(c(-3.473599, -2.994906, -1.232047))
cur_translate_dirs = matrix(c(-0.0262027124, 0.0003586071, -0.004356665,
                              0.0003586071, -0.0223224489, -0.010211015,
                             -0.0043566649, -0.0102110149, -0.021786600),
                             nrow=3, ncol=3)
cur_translate_dirs_candidate = matrix(c(-0.3205551, -0.2534793, -0.2088712))
nuisance = list(cur_nuisance)
translate_dirs = list(cur_translate_dirs)
translate_dirs_candidate = list(cur_translate_dirs_candidate)

# Compute pivot value for AR test statistic
weights_iv_ar(opt_intervals=intervals,
              sample_target=sample_target,
              candidate=0,
              nuisance=nuisance,
              translate_dirs=translate_dirs,
              translate_dirs_candidate=translate_dirs_candidate)
}
\references{
Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2019). Inference After Selecting
Plausibly Valid Instruments with Application to Mendelian Randomization.

Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2020). Inferring Treatment
Effects After Testing Instrument Strength in Linear Models.
}
\seealso{
\link{log_density} for calculating the log density of a given equation,
including the Jacobian term.
}
