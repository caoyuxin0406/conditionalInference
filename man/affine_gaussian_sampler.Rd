% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling.R
\name{affine_gaussian_sampler}
\alias{affine_gaussian_sampler}
\title{Affine Gaussian Sampler}
\usage{
affine_gaussian_sampler(
  affine_con,
  initial_point,
  observed_score_state,
  log_density,
  logdens_linear,
  opt_offset,
  selection_info = NULL
)
}
\arguments{
\item{affine_con}{The box constraint}

\item{initial_point}{Initial solution from optimization problem}

\item{observed_score_state}{The negated S matrix}

\item{log_density}{log_density function}

\item{logdens_linear}{Described how score enters log_density (linear part)}

\item{opt_offset}{Described how score enters log_density (offset part)}

\item{selection_info}{A list of (opt_sampler, opt_sample, target_cov, score_cov) objects}
}
\value{
An affine_gaussian sampler object, which is a list:
\item{affine_con}{The box constraint}
\item{initial_point}{Initial solution from optimization problem}
\item{observed_score_state}{The negated S matrix}
\item{selection_info}{A list of (opt_sampler, opt_sample, target_cov, score_cov) objects}
\item{log_density}{log_density function}
\item{logdens_linear}{Described how score enters log_density (linear part)}
\item{opt_offset}{Described how score enters log_density (offset part)}
}
\description{
Sample from an affine truncated Gaussian distribution.
}
\examples{
# Fit the group lasso optimization model
Z = matrix(rnorm(10*3), nrow = 10, ncol = 3) +
    matrix(replicate(3, matrix(0, nrow = 10, ncol = 1)),
    nrow = 10)
errorTerm = MASS::mvrnorm(n=10, mu=rep(0,2),
            Sigma=rbind(c(1, 0.8),c(0.8, 1)))
D = Z \%*\% rep(1, 3) + errorTerm[1:10, 2]
Y = D * 1 + errorTerm[1:10, 1]
gl <- group_lasso_iv(Y, D, Z)
model <- fit_tsls(gl)

# Build a new partial log_density function
new_log_density = pryr::partial(log_density,
                                logdens_linear=model$logdens_linear,
                                offset=model$opt_offset,
                                cond_prec=model$cond_precision,
                                active_directions=model$active_directions,
                                lagrange=model$lagrange,
                                Z=Z)

# Construct the affine gaussian sampler
affine_gaussian_sampler(affine_con = model$affine_con,
                        initial_point = model$observed_opt_state,
                        observed_score_state = model$observed_score_state,
                        log_density = new_log_density,
                        logdens_linear = model$logdens_linear,
                        opt_offset = model$opt_offset)
}
\references{
Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2019). Inference After Selecting
Plausibly Valid Instruments with Application to Mendelian Randomization.

Bi, Nan & Kang, Hyunseung & Taylor, Jonathan. (2020). Inferring Treatment
Effects After Testing Instrument Strength in Linear Models.
}
